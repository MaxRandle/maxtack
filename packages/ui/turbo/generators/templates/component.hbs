import { cva, type VariantProps } from "class-variance-authority";
import { twMerge } from "tailwind-merge";
import React from "react";

const {{ pascalCase name }}Variants = cva([""], {
  variants: {},
});

export type {{ pascalCase name }}Props = React.ComponentPropsWithoutRef<"div"> &
  VariantProps<typeof {{ pascalCase name }}Variants>;

export const {{ pascalCase name }} = React.forwardRef<
  React.ElementRef<"div">,
  {{ pascalCase name }}Props
>(({ className, ...props }, ref) => {
  const classes = {{ pascalCase name }}Variants({});

  return <div ref={ref} className={twMerge(classes, className)} {...props} />;
});

{{ pascalCase name }}.displayName = "{{ pascalCase name }}";
